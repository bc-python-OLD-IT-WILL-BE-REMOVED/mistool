==============
misTool - TODO
==============


> ---------------------------- <

**Une belle nouveauté dans le module ``python_use`` :** la classe ``MKDict`` permet de définir des dictionnaires dont on peut extraire une valeur en utilisant une syntaxe du type ``mymkdict["key_1", "subkey_1", "subsubkey_1"]`` au lieu de ``mymkdict["key_1"]["subkey_1"]["subsubkey_1"]``.

    MKDict ---> Multi Keys Dict

    toc = MKDict({
        "I": {
            "A": {
                "1": "Dans I-A-1",
                "2": "Dans I-A-2",
            }
        }
    })


    print(toc)
    print()
    print(toc["I", "A", "2"])


> ---------------------------- <

**Une nouvelle méthode de tri pour la classe ``os_use.DirView``:**  ????
    ---> trier par type d'application:  on trie en fait par extesnion et on regroupe les extensions par thème


> ---------------------------- <

Utilisation de __slots__ , __version__ ... Voir ce qu'il faut ajouter.


> ---------------------------- <

gestion de toutes les lettres grecques via une fonction dédiée qui repère beta, alpha, ...


> ---------------------------- <

**Amélioration côté développement interne :** voici ce qui a évolué.

    1) L'effacité des tests est évaluée à l'aide de ¨coverage.

    2) ¨pep8py et ¨pylint sont consultés pour améliorer le code de ¨mistool lorsque cela paraît pertinent.

	3) Le module ``pdt.mistool.orpyste`` du package maison ``pdt`` n'est plus utilisé. C'est la mort de cet étrange ``pdt``. À la place, on utilise tout simplement ¨orpyste qui est devenu totalement indépendant de ¨mistool. Et oui, on se professionnalise... ;-)

    Ceci permet au passage de rendre les tests disponibles sur ¨github uniquement (pas sur ¨pypi par choix).


> ---------------------------- <

**Utilisation de ¨setuptools:** le fichier ``setup.py`` se base maintenant sur ¨setuptools. Ceci se fait très efficacement grâce à ¨setytup un autre projet de l'auteur de ¨mistool.


> ---------------------------- <

A VOIR ????

    https://github.com/mahmoud/boltons ???

    string
    	---> S.expandtabs(tabsize=8)


    -----> type input securisé  via regex  ????
    			* int_input


> ---------------------------- <

**Mise en ligne d'une documentation non technique en français :** ceci a été rendu possible grâce au projet ¨pyba qui lui aussi est disponible sur ¨github et ¨pypi .


> ---------------------------- <

**Mise en ligne de la documentation technique en anglais uniquement :** ceci a été rendu possible grâce au projet ¨pybadoc qui lui aussi est disponible sur ¨github et ¨pypi .


> ---------------------------- <

**Améliorations du module ``latex_use`` :** il est maintenant possible d'indiquer des installations non standards de ¨latex qui ont été "faites à la main".
