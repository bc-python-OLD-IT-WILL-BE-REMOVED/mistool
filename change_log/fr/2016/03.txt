==========
2016-03-20
==========

**Suite de la mise √† jour des tests :** le cas du module ``term_use`` est compl√®tement trait√© maintenant avec la prise en compte de toutes les options de la classe ``DirView``. Reste √† ajouter de futurs cas probl√©matiques...


==========
2016-03-19
==========

**Am√©lioration du mode ``tree`` de la classe ``term_use.DirView`` :** pour bien diff√©rencier les dossiers des fichiers, le caract√®re unicode üìÅ apparait apr√®s le chemin d'un dossier.


==========
2016-03-16
==========

**¬®Chgts dans la classe ``term_use.DirView`` :** voici ce qui a √©t√© fait.

    1) La valeur du "regpath" reste celle de l'utilisateur qui choisira de faire appara√Ætre exactement ce qu'il veut. Ceci rend inutile l'option d'affichage ``"found"``.

    2) La mise en place de tests unitaires a r√©v√©l√© des probl√®mes dans la nouvelle fa√ßon de faire dus √† une non prise en compte du nouveau fonctionnement de la m√©thode ``walk`` de la classe ``os_use.PPath``. Ceci a √©t√© r√©par√© en supprimant la m√©thode ``_build_listview`` et la m√©thode ``_build_treeview`` compl√®tement refaite. Concr√®tement, on commence par la vue arborescente qui est plus simple √† cr√©er.


==========
2016-03-15
==========

**Oubli dans la classe ``latex_use.Build`` :** la compilation n'√©tait pas lanc√©e dans le m√™me dossier que le fichier ¬®latex. Ceci a √©t√© r√©par√© sans effort gr√¢ce √† l'utilisation du contexte ``os_use.cd``.


==========
2016-03-14
==========

**Refactorisation de la m√©thode ``walk`` de la classe ``os_use.PPath`` :** tout le code a √©t√© revu car il √©tait inutilement compliqu√© (un mauvais h√©ritage de ce qu'il fallait faire avant la naissance de ``pathlib.Path`` et de la lenteur des anciennes versions de la fonction ``os.walk``). Ceci implique les ¬®chgts suivants.

    1) Comme les recherches se font maintenant toujours de fa√ßon relative, la requ√™te ``"relative"`` a √©t√© supprim√©e.

    2) Les noms sp√©ciaux indiquant un dossier vide ou ne contenant que des fichiers ne v√©rifiant pas un motif n'existent plus : tous les dosseirs ont
    le m√™me statut (pour ceux sans fichier v√©rifiant un motif, on indique cela
    dans son √©tiquette, et de m√™me pour les dossiers vides). Ceci implique que
    c√¥t√© utilisateur la requ√™te ``"empty"`` n'existe plus.


**¬®Maj de la m√©thode cach√©e ``_build_listview`` de la classe ``term_use.DirView`` :** les ¬®chgts faits dans la m√©thode ``walk`` de la classe ``os_use.PPath`` ont √©t√© r√©percut√©s dans la classe ``term_use.DirView`` ce qui a permis de simplifier le code.


==========
2016-03-13
==========

**Du changement dans la m√©thode ``os_use.PPath.walk`` :** voici ce qui a √©t√© fait.

    1) L'argument ``givetags`` et la m√©thode cach√©e associ√©e ``__tagsreturnedbywalk`` n'existent plus. Les √©tiquettes sont directement stock√©es dans un attribut "cach√©" ``_tag`` des classes ``PPath`` renvoy√©es.

    2) Les fichiers ne v√©rifiant pas un motif "regpath" sont bien plus logiquement renvoy√©s comme des chemins de type "fichier" avec un nom particulier donn√© par ``OTHER_FILES_NAME``. De plus, les dossiers ne contenant que ce type de fichiers ont une √©tiquette particuli√®re maintenant donn√© par ``DIR_ONLY_OTHERS_TAG``.

    3) Correction de deux bugs r√©v√©l√©s par certains tests de la classe ``term_use.DirView``.

        a) La gestion des dossiers et des fichiers cach√©s √©tait mauvaise. Ceci devrait √™tre bon maintenant.

        b) La d√©finition du tri de type ``"filefirst"`` √©tait fausse.


**Diverses corrections et am√©liorations dans la classe ``term_use.DirView`` :** la mise en place de tests unitaires a abouti aux modifications suivantes.

    1) La nouvelle version de ``toc`` affiche maintenant toujours tous les fichiers dans un dossier, puis ensuite sont trait√©s de fa√ßon analogue les sous-dossiers... ¬®etc. C'est bien plus logique !

    2) Deux gros bugs corrig√©s.

        a) Les dossiers contenant uniquement des fichiers ne v√©rifiant pas le motif "regpath" apparassaient √† tors avec le r√©glage de ¬®mef ``"found"``. Ceci a √©t√© r√©par√©.

        b) Un bug s√©v√®re avec la m√©thode ``tree`` qui pouvait renvoyer "tout √† plat" avec le r√©glage de ¬®mef ``"found"``.


==========
2016-03-08
==========

**Suite de la mise √† jour des tests :** voici les modules dont les tests ont √©t√© actualis√©s.

    1) ``latex_use``.
    2) ``python_use``.
    3) ``term_use`` : tests uniquement des cadres textuels pour le moment.
    4) ``url_use``.


**Un nouveau bug corrig√© dans la fonction ``term_use.buildframe`` :** l'utilisation d'espaces comme d√©corateurs n'√©tait pas prise en compte. Ceci est maintenant possible.


**Petite am√©lioration c√¥t√© technique de programmation :** utilisation de constantes √† la place de cha√Ænes de caract√®res cod√©es "√† la main". C'est plus pro !


==========
2016-03-07
==========

**Am√©lioration et d√©but de la mise √† jour des tests :** voici ce qui a √©t√© fait.

    1) On utilise maintenant ¬®pytest ce qui simplifie √©norm√©ment les choses. On va enfin √† l'essentiel !

    2) Les tests sont disponibles sur ¬®github afin que les utilisateurs avertis puissent tester leur installation, mais ils ne le seront pas sur ¬®pypi pour ne pas polluer une distribution ¬®python lors d'une installation de ¬®mistool.

    3) L'√©trange package maison ``pdt`` a √©t√© totalement abandonn√© ! √Ä la place, on utilise tout simplement ¬®orpyste qui est devenu totalement ind√©pendant de ¬®mistool et le tr√®s pratique package ``pathlib``. Et oui, on se professionnalise... ;-)

    4) << ATTENTION ! >> Seuls les tests du module ``date_use`` ont √©t√© mis √† jour pour le moment afin de valider la nouvelle fa√ßon de proc√©der. Le reste viendra petit √† petit...


==========
2016-03-03
==========

**Un oubli idiot dans la m√©thode ``walk`` de la classe ``os_use.PPath`` :** les doubles points dans ``"relative::{0}".format(regpath)`` avaient √©t√© omis.


**Mise √† jour du module ``latex_use`` relativement √† ``os_use`` :** l'utilisation en production de ``latex_use`` a r√©v√©l√© deux oublis.

    1) On fait maintenant appel √† la m√©thode ``is_protected`` de la classe ``os_use.PPath`` au lieu de feu la fonction ``canmodify``.

    2) La classe ``Build`` a √©t√© mise √† jour relativement √† la derni√®re version de ``os_use.runthis``. Ceci s'est accompagn√© par le changement du nom de l'argument ``showinfos`` en ``showoutput``.
